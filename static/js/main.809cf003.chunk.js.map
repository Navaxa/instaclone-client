{"version":3,"sources":["utils/constants.js","utils/token.js","config/apollo.js","assets/img/instaclone.png","gql/user.js","components/Auth/RegisterForm/RegisterForm.js","context/AuthContext.js","hooks/useAuth.js","components/Auth/LoginForm/LoginForm.js","pages/Auth/Auth.js","assets/img/avatar.png","components/Header/RightHeader/RightHeader.js","components/Header/Header.js","layouts/LayoutBasic.js","pages/Error404/Error404.js","pages/Home/Home.js","components/UsertNotFound/UserNotFound.js","components/Modal/ModalBasic/ModalBasic.js","components/User/AvatarForm/AvatarForm.js","components/User/Profile/Profile.js","routes/routes.js","pages/User.js","routes/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["TOKEN","setToken","token","localStorage","setItem","getToken","getItem","decodeToken","jwtDecode","httpLink","createUploadLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","connectToDevTools","cache","InMemoryCache","link","concat","REGISTER","gql","LOGIN","GET_USER","UPDATE_AVATAR","DELETE_AVATAR","RegisterForm","setShowLogin","useMutation","register","formik","useFormik","initialValues","name","username","email","password","repeatPassword","validationSchema","Yup","trim","required","matches","oneOf","onSubmit","formData","a","newUser","variables","input","result","console","log","data","id","toast","error","success","className","Form","handleSubmit","Input","onChange","handleChange","value","values","type","placeholder","errors","Button","AuthContext","createContext","user","undefined","useContext","LoginForm","useState","setError","login","setUser","useAuth","message","Auth","showLogin","Container","fluid","Image","src","instaclone","onClick","RightHeader","auth","useQuery","loading","getUser","to","Icon","avatar","Avatar","Header","Grid","GridColumn","width","Logo","alt","LayoutBasic","children","Error404","Home","UserNotFound","ModalBasic","show","setShow","title","Modal","size","open","onClose","AvatarForm","setShowModal","update","updateAvatar","readQuery","query","writeQuery","urlAvatar","setLoading","loadingDelete","setLoadingDelete","deleteAvatar","onDrop","useCallback","acceptedFiles","file","status","setTimeout","useDropzone","accept","noKeyboard","multiple","getRootProps","getInputProps","onDeleteAvatar","warn","Profile","showModal","titleModal","setTitleModal","childrenModal","setChildrenModal","Column","handleModal","siteWeb","href","target","description","routes","path","layout","component","exact","useParams","Navigation","map","route","index","render","props","App","setAuth","useEffect","logout","authData","useMemo","ApolloProvider","Provider","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.809cf003.chunk.js","sourcesContent":["export const TOKEN = 'token';","import jwtDecode from 'jwt-decode';\r\nimport { TOKEN } from './constants';\r\n\r\nexport function setToken(token) {\r\n    localStorage.setItem(TOKEN, token);\r\n}\r\n\r\nexport function getToken() {\r\n    return localStorage.getItem(TOKEN);\r\n}\r\n\r\nexport function decodeToken(token) {\r\n    return jwtDecode(token);\r\n}","import { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\r\nimport { setContext } from \"apollo-link-context\";\r\nimport { createUploadLink } from 'apollo-upload-client';\r\nimport { getToken } from '../utils/token';\r\n\r\n// https://instaclone-server.azurewebsites.net/\r\nconst httpLink = createUploadLink({\r\n    uri: \"https://instaclone-server.azurewebsites.net/\",\r\n});\r\n\r\nconst authLink = setContext((_, {headers}) => {\r\n    const token = getToken();\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `Bearer ${token}` : ''\r\n        }\r\n    }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n    connectToDevTools: true,\r\n    cache: new InMemoryCache(),\r\n    link: authLink.concat(httpLink)\r\n});\r\n\r\nexport default client;","export default __webpack_public_path__ + \"static/media/instaclone.6489b803.png\";","import { gql } from '@apollo/client';\r\n\r\nexport const REGISTER = gql`\r\n    mutation register($input: UserInput) {\r\n        register(input: $input) {\r\n            id\r\n            name\r\n            username\r\n            email\r\n            password\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LOGIN = gql`\r\n    mutation login($input: LoginInput) {\r\n        login(input: $input) {\r\n            token\r\n    }\r\n}\r\n`;\r\n\r\nexport const GET_USER = gql`\r\n    query getUser($id: ID, $username: String) {\r\n    getUser(id: $id, username: $username) {\r\n        id\r\n        name\r\n        username\r\n        email\r\n        siteWeb\r\n        description\r\n        avatar\r\n    }\r\n    } \r\n`;\r\n\r\nexport const UPDATE_AVATAR = gql`\r\n    mutation updateAvatar($file: Upload) {\r\n        updateAvatar(file: $file) {\r\n            status\r\n            urlAvatar\r\n        }\r\n    }   \r\n`;\r\n\r\nexport const DELETE_AVATAR = gql`\r\n    mutation deleteAvatar {\r\n        deleteAvatar\r\n    }\r\n`;","import { useMutation } from '@apollo/client';\r\nimport { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport * as Yup from 'yup';\r\nimport { REGISTER } from '../../../gql/user';\r\nimport './RegisterForm.scss';\r\n\r\nconst initialValues = () => {\r\n    return {\r\n        name: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        repeatPassword: \"\"\r\n    };\r\n}\r\n\r\nconst RegisterForm = ({setShowLogin}) => {\r\n\r\n    const [register, setRegister] = useMutation(REGISTER);\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues(),\r\n        validationSchema: Yup.object({\r\n            name: Yup.string()\r\n                     .trim()\r\n                     .required(\"Es requerido\"),\r\n            username: Yup.string()\r\n                         .matches(/^[a-zA-Z0-9]*$/, \r\n                                  \"El nombre de usuario no debe tenece espacios\")\r\n                         .required(\"Debe agregar un nombre de usuario\"),\r\n            email: Yup.string()\r\n                      .email(\"El email no es valido\")\r\n                      .required(\"El email es obligatorio\"),\r\n            password: Yup.string()\r\n                         .required(\"La contraseña es obligatoria\"),\r\n                        //  .oneOf([Yup.ref(\"repeatPassword\")], \"Las contraseñas no son igulaes\"),\r\n            repeatPassword: Yup.string()\r\n                               .required(\"La contraseña es obligatoria\")\r\n                               .oneOf([Yup.ref(\"password\")], \"Las contraseñas no son igulaes\")\r\n        }),\r\n        onSubmit: async (formData) => {\r\n            try {\r\n                const newUser = formData;\r\n                delete newUser.repeatPassword;\r\n\r\n                const result = await register({\r\n                    variables: {\r\n                        input: newUser\r\n                    }\r\n                })\r\n\r\n                console.log(result);\r\n                if (result.data.register.id === null || !result) {\r\n                    return toast.error(\"El usuario ya esta en uso\");\r\n                }\r\n\r\n                toast.success('usuario registrado');\r\n                setShowLogin(true);\r\n            } catch (err) {\r\n                console.log('Error => ', err);\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"register-form-title\">Regístrate para ver fotos y videos de tus amigos</h2>\r\n            <Form\r\n                onSubmit={formik.handleSubmit} \r\n                className=\"register-form\">\r\n\r\n                <Form.Input\r\n                    onChange={formik.handleChange} \r\n                    value={formik.values.name}\r\n                    type=\"text\" \r\n                    placeholder=\"\r\n                    Nobre y apellidos\"\r\n                    error={formik.errors.name && true} \r\n                    name=\"name\"/>\r\n\r\n                <Form.Input\r\n                    onChange={formik.handleChange} \r\n                    type=\"text\" \r\n                    placeholder=\"\r\n                    Nobre de usuario\" \r\n                    error={formik.errors.username && true} \r\n                    name=\"username\"/>\r\n\r\n                <Form.Input\r\n                    onChange={formik.handleChange} \r\n                    type=\"email\" \r\n                    placeholder=\"\r\n                    Correo electronico\" \r\n                    error={formik.errors.email && true}\r\n                    name=\"email\"/>\r\n\r\n                <Form.Input\r\n                    onChange={formik.handleChange} \r\n                    type=\"password\" \r\n                    placeholder=\"\r\n                    Contraseña\"\r\n                    error={formik.errors.password && true} \r\n                    name=\"password\"/>\r\n\r\n                <Form.Input\r\n                    onChange={formik.handleChange} \r\n                    type=\"password\" \r\n                    placeholder=\"\r\n                    Repite la contraseña\"\r\n                    error={formik.errors.repeatPassword && true} \r\n                    name=\"repeatPassword\"/>\r\n\r\n                <Button \r\n                    type=\"submit\"\r\n                    className=\"btn-submit\">\r\n                        Registrarse\r\n                </Button>\r\n\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;","import { createContext } from 'react';\r\n\r\nconst AuthContext = createContext({\r\n    user: undefined\r\n});\r\n\r\nexport default AuthContext;","import { useContext } from 'react';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nexport default () => useContext(AuthContext);","import { useMutation } from '@apollo/client';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport * as Yup from 'yup';\r\nimport { LOGIN } from '../../../gql/user';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport './LoginForm.scss';\r\nimport { setToken, decodeToken } from '../../../utils/token';\r\n\r\nconst initialValues = () => {\r\n    return {\r\n        email: '',\r\n        password: '',\r\n    }\r\n}\r\n\r\nconst LoginForm = () => {\r\n\r\n    const [error, setError] = useState('');\r\n    const [login] = useMutation(LOGIN);\r\n\r\n    const { setUser } = useAuth();\r\n\r\n    const onSubmit = async (formData) => {\r\n        setError('');\r\n        try {\r\n            const { data } = await login({\r\n                variables: {\r\n                    input: formData\r\n                }\r\n            });\r\n            const { token } = data.login;\r\n            setToken(token);\r\n            setUser(decodeToken(token));\r\n        } catch(err) {\r\n            setError(err.message);\r\n        }\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues(),\r\n        validationSchema: Yup.object({\r\n            email: Yup.string().email('El email no es valido').required('El email es obligatorio'),\r\n            password: Yup.string().required('La contraseña es obligatoria')\r\n        }),\r\n        onSubmit: (formData) => onSubmit(formData)\r\n    })\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={formik.handleSubmit} \r\n            className=\"login-form\">\r\n\r\n            <h2>Incia sesión</h2>\r\n\r\n            <Form.Input\r\n                type='email'\r\n                placeholder='Correo electronico'\r\n                name='email'\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n                error={formik.errors.email}\r\n            />\r\n\r\n            <Form.Input\r\n                type='password'\r\n                placeholder='Contraseña'\r\n                name='password'\r\n                onChange={formik.handleChange}\r\n                value={formik.values.password}\r\n                error={formik.errors.password}\r\n            />\r\n\r\n            <Button \r\n                type='submit' \r\n                className='btn-submit'>\r\n                    Iniciar sesión\r\n            </Button>\r\n            {<p className='submit-error'>{error}</p>}\r\n\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\nimport './Auth.scss';\r\nimport { Container, Image } from 'semantic-ui-react'\r\nimport instaclone from '../../assets/img/instaclone.png';\r\nimport RegisterForm from '../../components/Auth/RegisterForm';\r\nimport LoginForm from '../../components/Auth/LoginForm';\r\n\r\nconst Auth = () => {\r\n    const [showLogin, setShowLogin] = useState(true);\r\n    return (\r\n        <Container fluid className=\"auth\">\r\n            <Image src={instaclone} />\r\n            <div className=\"container-form\">\r\n                {showLogin ? <LoginForm /> : <RegisterForm setShowLogin={setShowLogin}/>}\r\n            </div>\r\n\r\n            <div className=\"change-form\">\r\n                <p>\r\n                    {showLogin ? \r\n                        (\r\n                            <>\r\n                                ¿No tienes cuenta?\r\n                                <span onClick={() => setShowLogin(!showLogin)}> Registrate</span>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                Ya tengo cuenta\r\n                                <span onClick={() => setShowLogin(!showLogin)}> Iniciar sesión</span>\r\n                            </>\r\n                        )\r\n                    }\r\n                </p>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Auth;","export default __webpack_public_path__ + \"static/media/avatar.235f193d.png\";","import React from 'react';\r\nimport './RightHeader.scss';\r\nimport { Icon, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport Avatar from '../../../assets/img/avatar.png';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_USER } from '../../../gql/user';\r\n\r\nconst RightHeader = () => {\r\n\r\n    const { auth } = useAuth();\r\n\r\n    const {data, loading, error} = useQuery(GET_USER, {\r\n        variables: {username: auth.username}\r\n    });\r\n\r\n    if(loading || error) return null;\r\n\r\n    const { getUser } = data;\r\n\r\n    return (\r\n        <div className='right-header'>\r\n            <Link to='/'>\r\n                <Icon name='home' />\r\n            </Link>\r\n            <Icon name='plus' />\r\n            <Link to={`/${auth.username}`}>\r\n                <Image src={getUser.avatar ? getUser.avatar : Avatar} avatar />\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RightHeader;","import React from 'react';\r\nimport './Header.scss';\r\nimport { Container, Grid, GridColumn, Image } from 'semantic-ui-react';\r\nimport Logo from '../../assets/img/instaclone.png';\r\nimport { Link } from 'react-router-dom';\r\nimport RightHeader from './RightHeader';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <Container>\r\n                <Grid>\r\n                    <GridColumn \r\n                        className='header__logo'\r\n                        width={3}>\r\n                        <Link to='/'>\r\n                            <Image src={Logo} alt='Instaclone'/>\r\n                        </Link>\r\n                    </GridColumn>\r\n                    <GridColumn width={10}>\r\n                        <p>Buscador</p>\r\n                    </GridColumn>\r\n                    <GridColumn width={3}>\r\n                        <RightHeader />\r\n                    </GridColumn>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport Header from '../components/Header';\r\nconst LayoutBasic = ({children}) => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Container className=\"layout-basic\">{children}</Container> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default LayoutBasic;","import React from 'react';\r\nimport './Error404.scss';\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <div>\r\n            <h1>Error 404</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error404;","import React from 'react';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport './Home.scss';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <h1>Estamos en Home</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './UserNotFound.scss';\r\n\r\nconst UserNotFound = () => {\r\n    return (\r\n        <div className='user-not-found'>\r\n            <p>Usuario no encontrado</p>\r\n            <p>Es posible que el enlace que has seguido sea incorrecto o que el usuario se haya eliminado!</p>\r\n            <Link to='/'>\r\n                Volver al inicio\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserNotFound;","import React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport './ModalBasic.scss';\r\n\r\n\r\nconst ModalBasic = ({show, setShow, title, children}) => {\r\n\r\n    const onClose = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            size='mini'\r\n            open={show}\r\n            onClose={onClose}\r\n            className='modal-basic'>\r\n            \r\n            {title && <Modal.Header>{title}</Modal.Header>}\r\n            {children}\r\n\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalBasic;","import React, { useCallback, useState } from 'react';\r\nimport { Button } from 'semantic-ui-react';\r\nimport './AvatarForm.scss';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { GET_USER, UPDATE_AVATAR, DELETE_AVATAR } from '../../../gql/user';\r\nimport { useMutation } from '@apollo/client';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AvatarForm = ({ setShowModal, auth }) => {\r\n\r\n    const [updateAvatar] = useMutation(UPDATE_AVATAR, {\r\n        update(cache, {data: {updateAvatar}}) {\r\n            const { getUser } = cache.readQuery({\r\n                query: GET_USER,\r\n                variables: {username: auth.username}\r\n            });\r\n\r\n            cache.writeQuery({\r\n                query: GET_USER,\r\n                variables: {username: auth.username},\r\n                data: {\r\n                    getUser: {...getUser, avatar: updateAvatar.urlAvatar}\r\n                }\r\n            })\r\n        }\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingDelete, setLoadingDelete] = useState(false);\r\n\r\n    const [deleteAvatar] = useMutation(DELETE_AVATAR, {\r\n        update(cache) {\r\n            const { getUser } = cache.readQuery({\r\n                query: GET_USER,\r\n                variables: {username: auth.username}\r\n            });\r\n\r\n            cache.writeQuery({\r\n                query: GET_USER,\r\n                variables: {username: auth.username},\r\n                data: {\r\n                    getUser: {...getUser, avatar: ''}\r\n                }\r\n            })\r\n        }\r\n    });\r\n\r\n    const onDrop = useCallback(async acceptedFiles => {\r\n        const file = acceptedFiles[0];\r\n        try {\r\n            setLoading(true);\r\n            const { data } = await updateAvatar({ variables: { file } });\r\n            const { status } = data.updateAvatar;\r\n            if (status) {\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                    setShowModal(false);\r\n                    toast.success('Sa cambio con éxito!');\r\n                }, 1000);\r\n                return;\r\n            }\r\n            toast.error('Error al actualizar avatar!');\r\n            setLoading(false);\r\n        } catch (err) {\r\n            console.log('error => ', err);\r\n        }\r\n    }, []);\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        accept: 'image/jpeg, image/png',\r\n        noKeyboard: true,\r\n        multiple: false,\r\n        onDrop,\r\n    });\r\n\r\n    const onDeleteAvatar = async () => {\r\n        try {\r\n            const result = await deleteAvatar();\r\n            const {data} = result;\r\n            setLoadingDelete(true);\r\n            setTimeout(() => {\r\n                setLoadingDelete(false);\r\n                if(!data.deleteAvatar) {\r\n                    toast.warn('Error al eliminar el avatar');\r\n                } else {\r\n                    setShowModal(false);\r\n                    toast.success('Avatar eliminaro!');\r\n                }\r\n            }, 1000);\r\n        } catch(err) {\r\n            console.log('Error => ', err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='avatar-form'>\r\n            <Button\r\n                {...getRootProps()}\r\n                loading={loading}>Cargar una foto</Button>\r\n            <Button \r\n                onClick={onDeleteAvatar}\r\n                loading={loadingDelete}>Eliminar foto actual</Button>\r\n            <Button onClick={() => setShowModal(false)}>Cancelar</Button>\r\n            <input {...getInputProps()}></input>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvatarForm;","import React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_USER } from '../../../gql/user';\r\nimport './Profile.scss';\r\nimport Avatar from '../../../assets/img/avatar.png';\r\nimport { Grid, Image } from 'semantic-ui-react';\r\nimport UserNotFound from '../../UsertNotFound/UserNotFound';\r\nimport ModalBasic from '../../Modal/ModalBasic';\r\nimport AvatarForm from '../AvatarForm';\r\nimport useAuth from '../../../hooks/useAuth';\r\n\r\nconst Profile = ({username}) => {\r\n    const { data, loading, error } = useQuery(GET_USER, {\r\n        variables: { username }\r\n    });\r\n\r\n    const { auth } = useAuth(); \r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [titleModal, setTitleModal] = useState('');\r\n    const [childrenModal, setChildrenModal] = useState(null);\r\n\r\n    if (loading) return null;\r\n\r\n    if (error) return <UserNotFound />\r\n\r\n    const { getUser } = data;\r\n\r\n    const handleModal = (type) => {\r\n        switch(type) {\r\n            case 'avatar':\r\n                setTitleModal('Cambia tu foto de perfil');\r\n                setChildrenModal(<AvatarForm setShowModal={setShowModal} auth={auth} />);\r\n                setShowModal(true);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Grid className='profile'>\r\n\r\n                <Grid.Column width={5} className='profile__left'>\r\n                    <Image src={getUser.avatar ? getUser.avatar : Avatar} onClick={() => username === auth.username && handleModal('avatar')} />\r\n                </Grid.Column>\r\n\r\n                <Grid.Column width={11} className='profile__right'>\r\n                    <div>HeaderProfile</div>\r\n                    <div>Followers</div>\r\n                    <div className='other'>\r\n                        <p className='name'>{getUser.name}</p>\r\n                        {\r\n                            getUser.siteWeb && (\r\n                                <a href={getUser.siteWeb} target='_blank' className='siteWeb'>\r\n                                    {getUser.siteWeb}\r\n                                </a>\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            getUser.description && (\r\n                                <p className='description'>{getUser.description}</p>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </Grid.Column>\r\n\r\n            </Grid>\r\n            <ModalBasic \r\n                show={showModal} \r\n                setShow={setShowModal}\r\n                title={titleModal}>\r\n                {childrenModal}\r\n            </ModalBasic>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;","import LayoutBasic from '../layouts/LayoutBasic';\r\nimport Error404 from '../pages/Error404';\r\nimport Home from '../pages/Home';\r\nimport User from '../pages/User';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        layout: LayoutBasic,\r\n        component: Home,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/:username',\r\n        layout: LayoutBasic,\r\n        component: User,\r\n        exact: true\r\n    },\r\n    {\r\n        layout: LayoutBasic,\r\n        component: Error404,\r\n    }\r\n]\r\n\r\nexport default routes;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Profile from '../components/User/Profile';\r\n\r\nconst User = () => {\r\n\r\n    const { username } = useParams();\r\n\r\n    return (\r\n        <>\r\n            <Profile username={username} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default User;","import { map } from 'lodash';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport routes from './routes';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                {\r\n                    routes.map((route, index) => (\r\n                        <Route\r\n                            key={index}\r\n                            path={route.path}\r\n                            exact={route.exact}\r\n                            render={(props) => (\r\n                                <route.layout>\r\n                                    <route.component {...props} />\r\n                                </route.layout>\r\n                            )}                          \r\n                        />\r\n                    ))\r\n                    // map(routes, (route, index) => (\r\n                    //     <Route \r\n                    //         key={index}\r\n                    //         path={route.path}\r\n                    //         exact={route.exact}\r\n                    //         render={(props) => (\r\n                    //             <route.layout>\r\n                    //                 <route.component {...props} />\r\n                    //             </route.layout>\r\n                    //         )}\r\n                    //     />\r\n                    // ))\r\n                }\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import client from './config/apollo';\nimport { ApolloProvider } from '@apollo/client';\nimport { useState, useEffect, useMemo } from 'react';\nimport Auth from './pages/Auth';\nimport { ToastContainer } from 'react-toastify';\nimport { decodeToken, getToken } from './utils/token';\nimport AuthContext from './context/AuthContext';\nimport Navigation from './routes/Navigation';\n\nexport default function App() {\n  const [auth, setAuth] = useState(undefined);\n\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      setAuth(null);\n    } else {\n      setAuth(decodeToken(token));\n    }\n    \n  }, []);\n\n  const logout = () => {\n    console.log('Cerrar sesión');\n  }\n\n  const setUser = (user) => {\n    setAuth(user);\n  }\n\n  const authData = useMemo(\n    () => ({\n      auth,\n      logout,\n      setUser\n    }),\n    [auth]\n  )\n   \n  if (auth === undefined) return null;\n\n  return (\n    <ApolloProvider client={client}>\n      <AuthContext.Provider value={authData}>\n        {!auth ? <Auth /> : <Navigation />}\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar\n          newestOnTop\n          closeOnClick\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </AuthContext.Provider>\n    </ApolloProvider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'react-toastify/dist/ReactToastify.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}